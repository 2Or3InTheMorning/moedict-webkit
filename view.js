// Generated by LiveScript 1.2.0
(function(){
  var ref$, p, a, h1, div, main, span, inline, Result, List, slice$ = [].slice, replace$ = ''.replace;
  ref$ = React.DOM, p = ref$.p, a = ref$.a, h1 = ref$.h1, div = ref$.div, main = ref$.main, span = ref$.span;
  inline = function(props){
    var args;
    props == null && (props = {});
    args = slice$.call(arguments, 1);
    return div.apply(null, [import$({
      style: {
        display: 'inline'
      }
    }, props)].concat(slice$.call(args)));
  };
  Result = React.createClass({
    render: function(){
      switch (this.props.type) {
      case 'list':
        return List(this.props);
      case 'html':
        return inline({
          dangerouslySetInnerHTML: {
            __html: this.props.html
          }
        });
      default:
        return div({});
      }
    }
  });
  List = React.createClass({
    render: function(){
      var ref$, terms, id, h, lru, title, re, list, res$, t;
      ref$ = this.props, terms = ref$.terms, id = ref$.id, h = ref$.h, lru = ref$.lru;
      if (!terms) {
        return div({});
      }
      id = replace$.call(id, /^[@=]/, '');
      title = h1({
        itemProp: 'name'
      }, id);
      terms = replace$.call(terms, /^[^"]*/, '');
      if (id === '字詞紀錄簿') {
        if (!terms) {
          terms += "<p class='bg-info'>（請按詞條右方的 <i class='icon-star-empty'></i> 按鈕，即可將字詞加到這裡。）</p>";
        }
      }
      if (/^";/.exec(terms)) {
        terms = "<table border=1 bordercolor=#ccc><tr><td><span class='part-of-speech'>臺</span></td><td><span class='part-of-speech'>陸</span></td></tr>" + terms + "</table>";
        terms = terms.replace(/";([^;"]+);([^;"]+)"[^"]*/g, "<tr><td><a href=\"" + h + "$1\">$1</a></td><td><a href=\"" + h + "$2\">$2</a></td></tr>");
      } else if (id === '字詞紀錄簿') {
        terms = terms.replace(/"([^"]+)"[^"]*/g, "<span style='clear: both; display: block'>\u00B7 <a href=\"" + h + "$1\">$1</a></span>");
      } else {
        re = /"([^"]+)"[^"]*/g;
        res$ = [];
        while (t = re.exec(terms)) {
          t = t[1];
          res$.push(span({
            style: {
              clear: 'both',
              display: 'block',
              visibility: 'visible'
            }
          }, '\u00B7', a({
            href: h + "" + t
          }, t)));
        }
        list = res$;
        return inline.apply(null, [{}, title].concat(slice$.call(list)));
      }
      if (id === '字詞紀錄簿' && lru) {
        terms += "<br><h3 id='lru'>最近查閱過的字詞";
        terms += "<input type='button' id='btn-clear-lru' class='btn-default btn btn-tiny' value='清除' style='margin-left: 10px'>";
        terms += "</h3>\n";
        terms += lru.replace(/"([^"]+)"[^"]*/g, "<span style='clear: both; display: block'>\u00B7 <a href=\"" + h + "$1\">$1</a></span>");
      }
      return inline({}, title, div({
        dangerouslySetInnerHTML: {
          __html: terms
        }
      }));
    }
  });
  $(function(){
    return (React.View || (React.View = {})).result = React.renderComponent(Result(), $('#result')[0]);
  });
  function import$(obj, src){
    var own = {}.hasOwnProperty;
    for (var key in src) if (own.call(src, key)) obj[key] = src[key];
    return obj;
  }
}).call(this);
